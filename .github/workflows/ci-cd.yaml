name: Backend CI/CD

on:
  push:
    branches:
      - main
    paths:
      - "backend/**"
  pull_request:
    branches:
      - main
    paths:
      - "backend/**"

env:
  AWS_REGION: eu-north-1
  ECR_REPO: naman-raj
  IMAGE_TAG: ${{ github.sha }}
  K8S_DEPLOYMENT: property-brochure-backend
  K8S_NAMESPACE: default

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 3: Login to ECR
      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      # Step 4: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t $ECR_REPO:$IMAGE_TAG ./backend
          docker tag $ECR_REPO:$IMAGE_TAG ${{ steps.ecr-login.outputs.registry }}/$ECR_REPO:$IMAGE_TAG

      # Step 5: Push Docker image to ECR
      - name: Push Docker image
        run: |
          docker push ${{ steps.ecr-login.outputs.registry }}/$ECR_REPO:$IMAGE_TAG

      # Step 6: Update Kubernetes deployment
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.30.0" # match your cluster kubectl version

      - name: Update deployment image in EKS
        run: |
          kubectl set image deployment/$K8S_DEPLOYMENT backend=${{ steps.ecr-login.outputs.registry }}/$ECR_REPO:$IMAGE_TAG -n $K8S_NAMESPACE
          kubectl rollout status deployment/$K8S_DEPLOYMENT -n $K8S_NAMESPACE
