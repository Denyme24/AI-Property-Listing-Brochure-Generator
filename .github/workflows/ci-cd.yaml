name: Backend CI/CD

on:
  push:
    paths:
      - "backend/**"
  workflow_dispatch:

env:
  AWS_REGION: eu-north-1
  AWS_ACCOUNT_ID: 677276119247
  ECR_REPO: naman-raj
  K8S_DEPLOYMENT: property-brochure-backend
  K8S_NAMESPACE: default

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repo
        uses: actions/checkout@v3

      # Step 2: Log in to AWS ECR
      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2
        with:
          region: ${{ env.AWS_REGION }}

      # Step 3: Build Docker image
      - name: Build Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG backend/
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # Step 4: Push Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          IMAGE_TAG=${{ env.IMAGE_TAG }}
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG

      # Step 5: Configure kubectl to talk to EKS
      - name: Configure kubectl for EKS
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name PropertyBrochure-cluster
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Step 6: Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/$K8S_DEPLOYMENT backend=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:${{ github.sha }} -n $K8S_NAMESPACE
          kubectl rollout status deployment/$K8S_DEPLOYMENT -n $K8S_NAMESPACE
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
